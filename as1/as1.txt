//assignment1
Design a vending Machine (will accept coins of different denominations and vends out candies, soda etc)

Customers can 
1. search for goods;
2. Choose goods and pay by coins;

-------------------------------------------------------------------------------------------------------------
Class: Customer
State: name, coins
Behaviour: searchGoods(Goods goods) {
	Boolean haveGoods = Machine.search(goods); //display whether have goods wanted
}
Behaviour: choose(Goods goods) {
	if (goods.checkAvailability() >= 1) {
	    return goods.price;
	}else{
	    return 0;
	}
}
Behaviour: pay(Goods goods) {
	int paied;
	while(paied < goods.price) {
	    //pay by Coins coin;
	    if(coin.number >= 1){
	        coin.number -= 1;
	        paied += coin.value;
	    }
	}
	machine.charge();
	//get goods;
}

-------------------------------------------------------------------------------------------------------------
Class: Coins
State: number, value

-------------------------------------------------------------------------------------------------------------
Class: Goods
State: name, price, numbers
Behaviour: checkAvailability(){
	return this.numbers;
}

-------------------------------------------------------------------------------------------------------------
Class: Machine

List<Goods> goodsList;
Behaviour: addGoods(Goods goods, int numberAdded) {
    if(goodsList.contain(goods)){
        goods.numbers += numberAdded;
    }else{
        goodsList.add(goods);
        goods.number = numberAdded;
    }
}
Behaviour: search(Goods goods) {
	For(Goods i : goodsList) {
	if(i.equals(goods) && i.number >= 1)
	    return true;
	}
}
Behaviour: charge() {
	return goods.price - paied;
}